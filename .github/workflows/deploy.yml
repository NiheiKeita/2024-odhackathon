name: deploy to production-xserver

on: [pull_request]

jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          LOCAL_DIR: ./src
          REMOTE_DIR: /home/xs138787/hack

# jobs:
#   phpcs:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./src
#     steps:
#       - uses: actions/checkout@v2
#       - name: dokcer-compose up
#         run: |
#           # docker compose build
#           docker compose up -d
#       - name: composer install
#         run: |
#           docker compose exec app composer install
#       - name: Copy .env
#         run: |
#           docker compose exec app php -r "file_exists('.env') || copy('.env.example', '.env');"
#       - name: Generate key
#         run: |
#           docker compose exec app php artisan key:generate
#       - name: npm run install
#         run: |
#           docker compose exec app npm install
#       - name: npm build
#         run: |
#           docker compose exec app npm run build
# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest

# #     defaults:
# #       run:
# #         working-directory: ./src

# #     steps:
# #       - name: Setup PHP
# #         uses: shivammathur/setup-php@v2
# #         with:
# #           php-version: "8.1.12"
# #       - name: Checkout repository
# #         uses: actions/checkout@v3
# #       - name: Copy .env
# #         run: php -r "file_exists('.env') || copy('.env.example', '.env');"
# #       - name: Composer Install
# #         run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
# #       - name: Generate key
# #         run: php artisan key:generate
# #       - name: Directory Permissions
# #         run: chmod -R 777 storage bootstrap/cache
        
# #       - name: Use Node.js ${{ matrix.node-version }}
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: 16.x # 開発環境のバージョンと合わせて下さい
# #       - name: npm build
# #         run: npm install && npm run build


#       - name: Deploy to Server
#         uses: burnett01/rsync-deployments@5.2.1
#         with:
#           switches: -avzr --delete
#           path: src/
#           remote_path: ${{ secrets.PRODUCTION_DEPLOY_REMOTE_PATH }}
#           remote_host: ${{ secrets.DEPLOY_HOST }}
#           remote_port: ${{ secrets.DEPLOY_PORT }}
#           remote_user: ${{ secrets.DEPLOY_USER }}
#           remote_key: ${{ secrets.DEPLOY_KEY }}
#           rsh: 'ssh -v'